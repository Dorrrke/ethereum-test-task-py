# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import services.grpc_gen.ether_pb2 as ether__pb2


class EthereumServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetBalance = channel.unary_unary(
                '/ethereumservice.EthereumService/GetBalance',
                request_serializer=ether__pb2.GetBalanceRequest.SerializeToString,
                response_deserializer=ether__pb2.GetBalanceResponse.FromString,
                )
        self.GetLatestBlock = channel.unary_unary(
                '/ethereumservice.EthereumService/GetLatestBlock',
                request_serializer=ether__pb2.GetLatestBlockRequest.SerializeToString,
                response_deserializer=ether__pb2.GetLatestBlockResponse.FromString,
                )
        self.VerifyAddress = channel.unary_unary(
                '/ethereumservice.EthereumService/VerifyAddress',
                request_serializer=ether__pb2.VerifyAddressRequest.SerializeToString,
                response_deserializer=ether__pb2.VerifyAddressResponse.FromString,
                )


class EthereumServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetBalance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLatestBlock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VerifyAddress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EthereumServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetBalance': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBalance,
                    request_deserializer=ether__pb2.GetBalanceRequest.FromString,
                    response_serializer=ether__pb2.GetBalanceResponse.SerializeToString,
            ),
            'GetLatestBlock': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLatestBlock,
                    request_deserializer=ether__pb2.GetLatestBlockRequest.FromString,
                    response_serializer=ether__pb2.GetLatestBlockResponse.SerializeToString,
            ),
            'VerifyAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.VerifyAddress,
                    request_deserializer=ether__pb2.VerifyAddressRequest.FromString,
                    response_serializer=ether__pb2.VerifyAddressResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ethereumservice.EthereumService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class EthereumService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetBalance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ethereumservice.EthereumService/GetBalance',
            ether__pb2.GetBalanceRequest.SerializeToString,
            ether__pb2.GetBalanceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLatestBlock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ethereumservice.EthereumService/GetLatestBlock',
            ether__pb2.GetLatestBlockRequest.SerializeToString,
            ether__pb2.GetLatestBlockResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VerifyAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ethereumservice.EthereumService/VerifyAddress',
            ether__pb2.VerifyAddressRequest.SerializeToString,
            ether__pb2.VerifyAddressResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
